-- 1. item yang paling banyak terjual pada tanggal tertentu

SELECT 
    produk.id_produk, 
    produk.nama_produk, 
    produk.harga, 
    penjualan.tanggal_penjualan, 
    SUM(detail_penjualan.jumlah) AS total_terjual
FROM detail_penjualan
JOIN penjualan ON detail_penjualan.id_penjualan = penjualan.id_penjualan
JOIN produk ON detail_penjualan.id_produk = produk.id_produk
WHERE penjualan.tanggal_penjualan = '2025-02-19'
GROUP BY produk.id_produk, produk.nama_produk, produk.harga, penjualan.tanggal_penjualan
ORDER BY total_terjual DESC;


-- 2. rata-rata penjualan dalam 1 bulan

SELECT 
    MONTHNAME(penjualan.tanggal_penjualan) AS bulan,
    YEAR(penjualan.tanggal_penjualan) AS tahun,
    SUM(detail_penjualan.jumlah) AS total_terjual,
    SUM(penjualan.total_harga) AS total_penghasilan,
    AVG(penjualan.total_harga) AS rata_rata_penjualan
FROM penjualan
JOIN detail_penjualan ON penjualan.id_penjualan = detail_penjualan.id_penjualan
GROUP BY MONTH(penjualan.tanggal_penjualan);

-- 3. produk dengan keuntungan tertinggi

SELECT 
    produk.id_produk, 
    produk.nama_produk, 
    produk.harga, 
    produk.harga_beli, 
    (produk.harga - produk.harga_beli) AS keuntungan_per_item, 
    SUM(detail_penjualan.jumlah) AS total_terjual, 
    SUM((produk.harga - produk.harga_beli) * detail_penjualan.jumlah) AS total_keuntungan
FROM detail_penjualan
JOIN produk ON detail_penjualan.id_produk = produk.id_produk
GROUP BY produk.id_produk, produk.nama_produk, produk.harga, produk.harga_beli
ORDER BY total_keuntungan DESC
LIMIT 1;


-- 4. melihat penjualan harian berdasarkan metode pembayaran


SELECT 
    penjualan.tanggal_penjualan, 
    penjualan.metode_pembayaran, 
    COUNT(*) AS jumlah_transaksi, 
    SUM(penjualan.total_harga) AS total_penjualan
FROM penjualan
WHERE penjualan.tanggal_penjualan = '2025-02-20'
GROUP BY penjualan.tanggal_penjualan, penjualan.metode_pembayaran;


-- 5. melihat stok barang yang habis

SELECT * FROM produk WHERE stok = 0;